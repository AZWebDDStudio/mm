<?php

class Room
{
    /**
     * Это статическое свойство.
     * Для его вызова не требуется создавать отдельный объект.
     * Это свойство присуще всем объектам данного класса.
     * @var string
     */
    public static $location = 'Внутри дома.';

    public $color = 'red';

    /**
     * @param $location
     */
    public static function changeLocation($location)
    {
        // для того, чтоб обратиться к статическому св-ву или методу внутри класса
        // необходимо использовать ключевое слово "self"
        self::$location = $location;
    }

    public function changeColor($color)
    {
        $this->color = $color;
    }

    public static function staticChangeLocation($location)
    {
        // Для того, чтоб обратиться к статическому свойству дочернего класса
        // используют ключевое слово static
        // эта возможность появилась в php 5.3
        // в нашем случае нет никакого отличия от self.
        // Если нам понадобится его уникальный функционал, мы к этому еще вернемся.
        static::$location = $location;
    }
}

// Не нужно создавать объект, чтобы обратиться к статическому свойству.
echo Room::$location;

// Не нужно создавать объект, чтоб обратиться к статическому методу.
Room::changeLocation('Внутри дома тоже, но на Марсе!');

// Статические свойства очень похожи на простые переменные.
// Сейчас мы вновь выведем статическое свойство, измененное чуть выше.
echo '<br><br>А это измененное свойство: ';
echo Room::$location;

// Мы так же можем изменить статическое свойство,
// непосредственно присвоив ему новое значение:
Room::$location = 'На улице.';
// И проверим, что получилось:
echo '<br><br>А теперь наша комната находится: ';
echo Room::$location;

// Попробуем создать объект, и вызвать его статическое свойство
// обратим внимание на синтаксис.
$object = new Room();
echo '<br><br>А это свойство объекта: ';
echo $object::$location;

