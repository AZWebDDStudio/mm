<?php

class Room
{
    /**
     * Это приватное свойство (переменная).
     * Оно доступно только внутри данного класса.
     * Попытка получить это свойство вне тела класса приведет к ошибке.
     * @var string
     */
    private $color = 'red';

    /**
     * Это защищенное свойство (переменная).
     * Оно доступно внутри данного класса и в дочерних клссах.
     * Попытка получить его в других местах приведет к ошибке.
     * @var integer
     */
    protected $windows = 4;

    /**
     * Это публичное свойство (переменная).
     * Оно доступно в любом месте кода.
     * @var bool
     */
    public $lamp = true;

    /**
     * Это публичный метод (функция).
     * Он принимает один параметр и ничего не возвращает.
     * Вызов этого метода проделывает некую работу (логику) внутри текущего объекта.
     * В данном случае - это изменение цвета у объекта.
     * @param $color
     */
    public function changeColor($color)
    {
        $this->color = $color;
    }

    /**
     * Это публичный метод (функция).
     * Он не принимает параметров.
     * Он возвращает значение.
     * В данном случае, возвращает текущее значение цвета объекта.
     * @return string
     */
    public function getColor()
    {
        return $this->color;
    }
}

// Создаем новый объект класса Room
$object = new Room();

echo 'Выводим публичное свойство: ';
echo $object->lamp . '<br><br>';

// То же самое, но более хитро.
echo 'Сейчас свет ';
echo $object->lamp ? 'включен.' : 'выключен.';
echo '<br>';

// Раскомментируйте следующие две строки и убедитесь, что это не сработает.
//echo 'Пытаемся вывести защищенное свойство: ';
//echo $object->windows;
echo '<br>';

// То же самое при попытке обратиться к приватному свойству в следующих 2х строках
//echo 'Пытаемся вывести приватное свойство: ';
//echo $object->color;
echo '<br>';

echo 'Конец выполнения скрипта.';
